const pluralize = require("pluralize");

const pronouns = [
  "people",
  "been",
  "ok",
  "at",
  "tomorrow",
  "hello",
  "always",
  "does",
  "i",
  "you",
  "he",
  "she",
  "it",
  "we",
  "you",
  "they",
  "me",
  "you",
  "him",
  "her",
  "it",
  "us",
  "you",
  "them",
  "my",
  "your",
  "his",
  "her",
  "its",
  "our",
  "your",
  "their",
  "mine",
  "yours",
  "his",
  "hers",
  "its",
  "ours",
  "yours",
  "theirs",
  "myself",
  "yourself",
  "himself",
  "herself",
  "itself",
  "ourselves",
  "yourselves",
  "themselves",
  "as",
  "sometimes",
  "upstairs",
  "downstairs",
  "perhaps",
  "clothes",
  "headaches",
  "sunglasses",
  "chris",
  "claus",
  "texas",
  "she’s",
  "he’s",
  "it’s",
  "Louis",
  "Daniel",
  "Dora",
  "Dotty",
  "Alice",
  "Dorothy",
  "Chris",
  "Evelyn",
  "Claus",
  "Chefs",
  "S",
  "P",
  "Hooper",
  "Miller",
  "Texas",
  "Thirteen",
  "D.C",
  "Ahh",
  "Edith",
  "X",
  "Norm",
  "Dan",
  "Eva",
  "Seabirds",
  "Marina",
  "Sasha",
  "Pauline",
  "Burgur",
  "Derrick",
  "Asher",
  "Ava",
  "E",
  "Olga",
  "Cloudy",
  "F",
  "M",
  "J",
  "Nevertheless",
  "Whack",
  "Eduard",
  "O",
  "Wheatina",
  "Frankly",
  "Fortunately",
  "e",
  "Reregistration",
  "Thelma",
  "Barkley",
  "Marbles",
  "Unfortunately",
  "Darwin",
  "U",
  "Curiously",
  "Interwoven",
  "Similarly",
  "Safely",
  "Jerome",
  "Luckily",
  "Moaning",
  "Kildare",
  "Welby",
  "Q",
  "Z",
  "Where’d",
  "Ordinarily",
  "Maggots",
  "Dangling",
  "U.S.A",
  "Roy",
  "B",
  "Adrian",
  "N",
  "R",
  "Sonny",
  "Roger",
  "W",
  "Moreover",
  "Deb",
  "Marilu",
  "Vance",
  "Shane",
  "Pietro",
  "Amazon.com",
  "Ugh",
  "T",
  "Ira",
  "C",
  "Sheri",
  "D",
  "Maury",
  "Canon",
  "t",
  "Undaunted",
  "Jude",
  "Nostalgically",
  "Menacingly",
  "Connor",
  "See?I",
  "Drake",
  "Unintentionally",
  "Streaks",
  "Ms",
  "Stop!To",
  "Annika",
  "Abbott",
  "Costello",
  "Abbot",
  "Storeowners",
  "Russ",
  "Lynn",
  "WHACK",
  "Elaine",
  "CNBC",
  "Fleet",
  "Ross",
  "Blake",
  "Patrick",
  "Nono",
  "Cristie",
  "Naomi",
  "Nada",
  "Zilch",
  "Mo",
  "Embossed",
  "bottom?Remember",
  "Miraculously",
  "wailed",
  "Farewell",
  "Paige",
  "Filing",
  "Bernard",
  "Surprisingly",
  "DEA",
  "Lauren",
  "Franklin",
  "Mindy",
  "Bunyan",
  "Ditto",
  "Iraq",
  "Ethel",
  "H",
  "K",
  "Lois",
  "Cynics",
  "Seuss",
  "Therefore",
  "Rushmore",
  "implored",
  "Bartenders",
  "Overeaters",
  "Gamblers",
  "l",
  "n",
  "o",
  "s",
  "Frantic",
  "Overhearing",
  "Ehks",
  "Reclining",
  "NFL",
  "Medics",
  "Yolanda",
  "Oprah",
  "Gracie",
  "Cy",
  "Exasperated",
  "NPR",
  "Harmon",
  "u",
  "Unh",
  "Solar",
  "Farina",
  "Decriminalization",
  "Spencer",
  "MAGA",
  "Valerie",
  "Rita",
  "Perpetua",
  "Sparkly",
  "Keegan",
  "Angelo",
  "Nell",
  "Accordingly",
  "FixPCsbyNerds.com",
  "Keith",
  "Petersburg",
  "Incidentally",
  "Where’ve",
  "Combustion",
  "Dogs’ll",
  "coli",
  "Frackers",
  "Eighteen",
  "Abby",
  "Deon",
  "Unica",
  "Casey",
  "Ultimately",
  "Momentarily",
  "Garth",
  "Gwyneth",
  "Liam",
  "clothe",
  "Daphne",
  "Whyte",
  "Leticia",
  "Debbie",
  "Twas",
  "Forbes",
  "Pormouth",
  "Watnow",
  "EllyMay",
  "Judith",
  "Quentin",
  "Maureen",
  "Dale",
  "Teresa",
  "Imogene",
  "Alana",
  "MatchMee.com",
  "Rudy",
  "Blatant",
  "Noemi",
  "Dalley",
  "Dantrell",
  "Ooh",
  "Gatherers",
  "d",
  "Charlene",
  "Strangely",
  "Fearful",
  "Zoey",
  "Myron",
  "k",
  "www.awebsitetoo",
  "Julian",
  "Charlotte",
  "Axle",
  "Y",
  "downed",
  "Elvin",
  "Subsequently",
  "GM",
  "G",
  "Clarence",
  "Vince",
  "Unmarked",
  "Amazingly",
  "Oofah",
  "Waggling",
  "DNAinfo.com",
  "Jethro",
  "Betsy",
  "Britney",
  "Leesa",
  "Nah",
  "Duh",
  "Jonah",
  "Cecil",
  "Everyman",
  "Savanah",
  "Melinda",
  "pre‑Ks",
  "Somewhat",
  "Webb",
  "Brendon",
  "Dwayne",
  "Bates",
  "Christopher",
  "Kenneth",
  "Kimberly",
  "Tracy",
];

const wordLexicalEditor = (word) => {
  // word = word.toLowerCase();

  const pronounsToLowerCase = []
  for (el of pronouns) {
    pronounsToLowerCase.push(el.toLowerCase())
  }

  // Ставим в единственное число, если слово не местоимение
  if (!pronounsToLowerCase.includes(word.toLowerCase())) {
    word = pluralize.singular(word);
  }
  return word;
};

module.exports = wordLexicalEditor;
